#!/usr/bin/env python3
"""
Script de debug para identificar errores en main.py
"""

import traceback
import sys

try:
    print("üîç Iniciando debug de main.py...")
    
    # Importar m√≥dulos uno por uno para identificar problemas
    print("üì¶ Importando tkinter...")
    import tkinter as tk
    from tkinter import ttk, messagebox
    
    print("üì¶ Importando sqlite3...")
    import sqlite3
    
    print("üì¶ Importando datetime...")
    from datetime import datetime
    
    print("üì¶ Importando os...")
    import os
    
    print("üì¶ Importando m√≥dulos del sistema...")
    
    try:
        from modules.database import Database
        print("   ‚úÖ Database importado")
    except Exception as e:
        print(f"   ‚ùå Error en Database: {e}")
        
    try:
        from modules.inventory import InventoryModule
        print("   ‚úÖ InventoryModule importado")
    except Exception as e:
        print(f"   ‚ùå Error en InventoryModule: {e}")
        
    try:
        from modules.clients import ClientsModule
        print("   ‚úÖ ClientsModule importado")
    except Exception as e:
        print(f"   ‚ùå Error en ClientsModule: {e}")
        
    try:
        from modules.workshop import WorkshopModule
        print("   ‚úÖ WorkshopModule importado")
    except Exception as e:
        print(f"   ‚ùå Error en WorkshopModule: {e}")
        
    try:
        from modules.suppliers import SuppliersModule
        print("   ‚úÖ SuppliersModule importado")
    except Exception as e:
        print(f"   ‚ùå Error en SuppliersModule: {e}")
        
    try:
        from modules.reports import ReportsModule
        print("   ‚úÖ ReportsModule importado")
    except Exception as e:
        print(f"   ‚ùå Error en ReportsModule: {e}")
        
    try:
        from modules.auth import AuthModule
        print("   ‚úÖ AuthModule importado")
    except Exception as e:
        print(f"   ‚ùå Error en AuthModule: {e}")
        
    try:
        from modules.workers import WorkersModule
        print("   ‚úÖ WorkersModule importado")
    except Exception as e:
        print(f"   ‚ùå Error en WorkersModule: {e}")
        
    try:
        from modules.enhanced_quotes import EnhancedQuotesModule
        print("   ‚úÖ EnhancedQuotesModule importado")
    except Exception as e:
        print(f"   ‚ùå Error en EnhancedQuotesModule: {e}")
        
    try:
        from modules.remainders import RemaindersModule
        print("   ‚úÖ RemaindersModule importado")
    except Exception as e:
        print(f"   ‚ùå Error en RemaindersModule: {e}")
        
    try:
        from modules.analytics import AnalyticsModule
        print("   ‚úÖ AnalyticsModule importado")
    except Exception as e:
        print(f"   ‚ùå Error en AnalyticsModule: {e}")
        
    try:
        from modules.styles import create_styled_button, create_styled_frame, create_styled_label, create_styled_entry, COLORS, FONTS
        print("   ‚úÖ Styles importado")
    except Exception as e:
        print(f"   ‚ùå Error en Styles: {e}")
        
    try:
        from modules.quotes import QuotesModule
        print("   ‚úÖ QuotesModule importado")
    except Exception as e:
        print(f"   ‚ùå Error en QuotesModule: {e}")
    
    print("\nüöÄ Intentando crear la aplicaci√≥n...")
    
    # Crear la aplicaci√≥n
    root = tk.Tk()
    
    # Importar la clase principal
    from main import TallerMecanicoApp
    
    print("‚úÖ Clase TallerMecanicoApp importada correctamente")
    
    # Crear instancia
    app = TallerMecanicoApp(root)
    print("‚úÖ Aplicaci√≥n creada exitosamente")
    
    print("\nüéâ ¬°Todo parece estar funcionando!")
    print("La aplicaci√≥n deber√≠a iniciarse normalmente.")
    
except Exception as e:
    print(f"\n‚ùå ERROR ENCONTRADO:")
    print(f"Tipo: {type(e).__name__}")
    print(f"Mensaje: {str(e)}")
    print(f"\nüìç Traceback completo:")
    traceback.print_exc()
